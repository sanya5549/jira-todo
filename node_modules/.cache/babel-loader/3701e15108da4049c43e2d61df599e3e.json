{"ast":null,"code":"import { ADD_NEW_CARD, REMOVE_CARD, EDIT_CARD } from './config/constants';\nimport { ok } from 'assert'; // by the action of adding card, we are returning the whole card with all its properties \n\nexport var addCard = function addCard(card) {\n  //return everything you want to be caught by the root reducer in action \n  return {\n    type: ADD_NEW_CARD,\n    payload: card\n  };\n}; // by the action of deleting card, we only need its id to check which card was chosen by the user\n\nexport var removeCard = function removeCard(cardId) {\n  return {\n    type: REMOVE_CARD,\n    payload: cardId\n  };\n}; //for the action of edit card also we need its properties to change and update them\n\nexport var editCard = function editCard(card) {\n  return {\n    type: EDIT_CARD,\n    payload: card\n  };\n};","map":{"version":3,"sources":["/home/sanya/Documents/intern/jira-todo/src/actions.js"],"names":["ADD_NEW_CARD","REMOVE_CARD","EDIT_CARD","ok","addCard","card","type","payload","removeCard","cardId","editCard"],"mappings":"AAAA,SAAQA,YAAR,EAAsBC,WAAtB,EAAmCC,SAAnC,QAAmD,oBAAnD;AACA,SAASC,EAAT,QAAmB,QAAnB,C,CAEA;;AACA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD,EAAU;AAC7B;AACA,SAAO;AACHC,IAAAA,IAAI,EAAEN,YADH;AAEHO,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAIH,CANM,C,CAQP;;AACA,OAAO,IAAMG,UAAU,GAAG,SAAbA,UAAa,CAACC,MAAD,EAAY;AAClC,SAAO;AACHH,IAAAA,IAAI,EAAEL,WADH;AAEHM,IAAAA,OAAO,EAAEE;AAFN,GAAP;AAIH,CALM,C,CAOP;;AACA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACL,IAAD,EAAU;AAC9B,SAAO;AACHC,IAAAA,IAAI,EAAEJ,SADH;AAEHK,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAIH,CALM","sourcesContent":["import {ADD_NEW_CARD, REMOVE_CARD, EDIT_CARD} from './config/constants'\nimport { ok } from 'assert';\n\n// by the action of adding card, we are returning the whole card with all its properties \nexport const addCard = (card) => {      \n    //return everything you want to be caught by the root reducer in action \n    return {\n        type: ADD_NEW_CARD,\n        payload: card                \n    }\n}\n\n// by the action of deleting card, we only need its id to check which card was chosen by the user\nexport const removeCard = (cardId) => {   \n    return {\n        type: REMOVE_CARD,\n        payload: cardId\n    }\n}\n\n//for the action of edit card also we need its properties to change and update them\nexport const editCard = (card) => { \n    return {\n        type: EDIT_CARD,\n        payload: card\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}